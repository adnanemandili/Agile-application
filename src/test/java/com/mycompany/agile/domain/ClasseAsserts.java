package com.mycompany.agile.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClasseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClasseAllPropertiesEquals(Classe expected, Classe actual) {
        assertClasseAutoGeneratedPropertiesEquals(expected, actual);
        assertClasseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClasseAllUpdatablePropertiesEquals(Classe expected, Classe actual) {
        assertClasseUpdatableFieldsEquals(expected, actual);
        assertClasseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClasseAutoGeneratedPropertiesEquals(Classe expected, Classe actual) {
        assertThat(expected)
            .as("Verify Classe auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClasseUpdatableFieldsEquals(Classe expected, Classe actual) {
        assertThat(expected)
            .as("Verify Classe relevant properties")
            .satisfies(e -> assertThat(e.getClassName()).as("check className").isEqualTo(actual.getClassName()))
            .satisfies(e -> assertThat(e.getLevel()).as("check level").isEqualTo(actual.getLevel()))
            .satisfies(e -> assertThat(e.getGroup()).as("check group").isEqualTo(actual.getGroup()))
            .satisfies(e -> assertThat(e.getNiveau()).as("check niveau").isEqualTo(actual.getNiveau()))
            .satisfies(e -> assertThat(e.getFilere()).as("check filere").isEqualTo(actual.getFilere()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClasseUpdatableRelationshipsEquals(Classe expected, Classe actual) {
        assertThat(expected)
            .as("Verify Classe relationships")
            .satisfies(e -> assertThat(e.getProfesseurs()).as("check professeurs").isEqualTo(actual.getProfesseurs()));
    }
}
