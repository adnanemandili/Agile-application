package com.mycompany.agile.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MatiereAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatiereAllPropertiesEquals(Matiere expected, Matiere actual) {
        assertMatiereAutoGeneratedPropertiesEquals(expected, actual);
        assertMatiereAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatiereAllUpdatablePropertiesEquals(Matiere expected, Matiere actual) {
        assertMatiereUpdatableFieldsEquals(expected, actual);
        assertMatiereUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatiereAutoGeneratedPropertiesEquals(Matiere expected, Matiere actual) {
        assertThat(expected)
            .as("Verify Matiere auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatiereUpdatableFieldsEquals(Matiere expected, Matiere actual) {
        assertThat(expected)
            .as("Verify Matiere relevant properties")
            .satisfies(e -> assertThat(e.getSubjectName()).as("check subjectName").isEqualTo(actual.getSubjectName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatiereUpdatableRelationshipsEquals(Matiere expected, Matiere actual) {
        assertThat(expected)
            .as("Verify Matiere relationships")
            .satisfies(e -> assertThat(e.getProfesseur()).as("check professeur").isEqualTo(actual.getProfesseur()));
    }
}
